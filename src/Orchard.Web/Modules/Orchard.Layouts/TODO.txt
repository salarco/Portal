Drag/drop between containers, with keyboard modifiers for move vs. copy.
Drag column resizing and offsetting.
Remove the BaseUrl service (move to config data).
Fix inline editing glitches:
    - Add activate button on every content element, delegates to activateInlineEditing() on canvas scope.
    - Clicking on canvas or outside canvas should not lose editor focus.
    - SIPKE: For persistence of inline editing changes, you need to update server-side code to use the html property for persistence, rather than what's baked into the data property.
Add keyboard support.
Generally improve accessibility (add aria attributes etc).
Add clipboard support. Both keyboard-driven and via cut/copy/paste actions on panel.
Rename ElementConfigurator to ScopeConfigurator and its methods to "configureElementScope" and "configureContainerScope" respectively.
Refactor repeated template markup into separate templates/directives.
Add undo/redo support?
Add "document outline" view to the left of canvas?
Add "toolbox" view to create new elements using drag/drop?
Fix FOUC while canvas is binding.
Get rid of "replace" property on directives (deprecated in Angular)!

STATES:

    The following classes are used:
        * layout-canvas: the root canvas that hosts layout elements
        * layout-container: an element that can contain other elements, such as the canvas, grid, row and column
        * layout-child-wrapper: a div used to wrap each one of a containers children
        * layout-element: a layout element
        * layout-grid: a layout grid element; can contain rows
        * layout-row: a layout row element; can contain columns
        * layout-column: a layout column element; can contain any other element
        * layout-column-span-*: denotes the width of a column element
        * layout-panel: a docked UI panel for interacting with an element (invoking its actions)
        * layout-panel-item: an item on a UI panel; can be one of the following:
            - layout-panel-action: an icon button for invoking an element action such as edit, delete or split; only shown when an element is focused
            - layout-panel-label: a label for showing the type of an element (such as "row" or "column"); only shown when an element is active or focused
        * layout-popup: a floating UI popup for interacting with an element (invoking its actions)
        * layout-popup-item: an item on a UI popup; can be one of the following:
            - layout-popup-action: a button for invoking a choice
            - layout-popup-label: a static label

    Elements have four states:
        * Default: none of the other states apply
        * Active: the user hovers over the element; represented by the layout-element-active class
        * Selected: either the element itself or one of its descendant elements is focused; represented by the layout-element-selected class
        * Focused: the user has clicked on the element and it can now be edited; represented by the layout-element-focused class

    When an element becomes focused, all other elements automatically become unfocused.
    Selected elements can never be active, i.e. hovering over them has no additional effect.


MANIPULATION MY HANDLE:

    You can always drag an edge.
        Right edge to increase/decrease width.
        Left edge to increase/decrease offset AND width.
        Visually and "mechanically" intuitive.
        
    If there is an adjacent neighbor on the side being dragged:
        The near edge of the neigbor column follows.
        Neighbor gets inversely manipulated.
        Movement is limited by MIN width of both columns.
        
    If there is no adjacent neighbor on the side being dragged:
        Movement is limited by MIN width of current column AND available space beside it.
        Two operations required to a) fill the gap to nearest neighbor and b) grow even further shrinking the nearest neighbor.
    
MANIPULATION BY BUTTONS:

    Grow and shrink cannot be done - no buttons for that.

    Split:
        Always even parts when possible (divisible by two).
        Otherwise left part is bigger by one.
        
    Offset increase:
        Move if space is available to the right.
        Otherwise move AND shrink.

    Offset decrease:
        Only if space is available to the left.
        The corresponding offset is added on the next column to the right (movement appears "independent" of other columns in the row).
    
    Move left/right (reorder).

OTHER THOUGHTS:

    Adding a new row should show dropdown for number of columns (only evenly divisible numbers).
    Adding a new element to a container should show dropdown for selectable element types (not a dialog).       
        
BUTTONS:

    Edit				<i class="fa fa-edit"></i>
    Delete				<i class="fa fa-remove"></i>
    Move up				<i class="fa fa-chevron-up"></i>
    Move down			<i class="fa fa-chevron-down"></i>
    Move left			<i class="fa fa-chevron-left"></i>
    Move right			<i class="fa fa-chevron-right"></i>
    Split				<i class="fa fa-pause"></i>
    Increase offset		<i class="fa fa-indent"></i>
    Decrease offset		<i class="fa fa-outdent"></i>

